{
  "name": "Neoluma",
  "scopeName": "source.nm",
  "fileTypes": ["neo"],
  "patterns": [
    { "include": "#comments" },
    { "include": "#strings" },
    { "include": "#numbers" },
    { "include": "#preprocessor" },
    { "include": "#decorators" },
    { "include": "#keywords" },
    { "include": "#types" },
    { "include": "#modifiers" },
    { "include": "#functions" },
    { "include": "#classes" },
    { "include": "#operators" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        { "name": "comment.line.doc.neo", "match": "///.*$" },
        { "name": "comment.line.double-slash.neo", "match": "//.*$" },
        { "name": "comment.block.neo", "begin": "/\\*", "end": "\\*/" },
        { "name": "comment.block.documentation.neo", "begin": "'''", "end": "'''" }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.neo",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            { "name": "constant.character.escape.neo", "match": "\\\\." },
            { "name": "variable.interpolation.neo", "match": "\\$\\{[^}]+\\}" }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        { "name": "constant.numeric.neo", "match": "\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b" }
      ]
    },
    "preprocessor": {
      "patterns": [
        {
          "name": "meta.preprocessor.neo",
          "match": "^\\s*#(unsafe|baremetal|import|macro)\\b.*$"
        }
      ]
    },
    "decorators": {
      "patterns": [
        { "name": "meta.annotation.neo", "match": "@[A-Za-z_][A-Za-z0-9_]*" }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.neo",
          "match": "\\b(if|else|switch|case|default|for|while|break|continue|try|catch|throw|yield|return)\\b"
        },
        {
          "name": "keyword.declaration.neo",
          "match": "\\b(fn|function|class|interface|enum|namespace|decorator)\\b"
        },
        {
          "name": "keyword.operator.neo",
          "match": "\\b(in|as|of|new)\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.neo",
          "match": "\\b(int|float|number|string|bool|array|set|dict|void|result|ModuleNode)\\??\\b"
        }
      ]
    },
    "modifiers": {
      "patterns": [
        {
          "name": "storage.modifier.neo",
          "match": "\\b(public|private|protected|static|override|abstract|const|comptime|unsafe|entry)\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.neo",
          "match": "\\b[A-Za-z_][A-Za-z0-9_]*(?=\\s*\\()"
        }
      ]
    },
    "classes": {
      "patterns": [
        {
          "name": "entity.name.type.class.neo",
          "match": "\\b[A-Z][A-Za-z0-9_]*\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.neo",
          "match": "(<-|->|=>|=|\\+|-|\\*|/|%)"
        },
        {
          "name": "keyword.operator.logical.neo",
          "match": "(==|!=|>|<|>=|<=|&&|\\|\\|)"
        }
      ]
    }
  }
}
